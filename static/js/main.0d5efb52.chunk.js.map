{"version":3,"sources":["components/ImageModal/imageModal.js","components/Image/Image.js","components/Image/index.js","components/Gallery/index.js","components/Gallery/Gallery.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["Modal","setAppElement","ImageModal","props","backgroundImage","closeModal","isOpen","showModal","contentLabel","style","content","top","left","right","bottom","marginRight","transform","src","alt","onClick","type","Image","ref","useRef","useState","rotation","setRotation","setShowModal","dto","galleryWidth","deleteImage","index","moveImage","useDrop","accept","hover","item","current","dragIndex","hoverIndex","drop","useDrag","id","collect","monitor","isDragging","drag","onEnlargeImage","imagesPerRow","Math","round","size","className","farm","server","secret","urlFromDto","width","height","opacity","name","title","event","preventDefault","onRotateImage","urlModalImage","Gallery","images","setImages","setGalleryWidth","apiCallCounter","setApiCallCounter","maxPages","setMaxPages","getImages","tag","pageNumber","getImagesUrl","axios","url","baseURL","method","then","res","data","photos","photo","length","pages","useEffect","document","body","clientWidth","window","addEventListener","updateDimensions","isFirstRun","debouncedSave","debounce","nextValue","removeEventListener","onDeleteImage","imageDetails","filter","image","draggedImage","update","$splice","dataLength","hasMore","next","loader","scrollThreshold","endMessage","textAlign","map","App","setTag","onChange","target","value","DndProvider","backend","HTML5Backend","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0d5efb52.chunk.js","sourcesContent":["import React from 'react';\r\nimport Modal from 'react-modal';\r\n\r\nModal.setAppElement('#app')\r\n\r\nconst ImageModal = (props) => {\r\n\r\n    const { backgroundImage, closeModal } = props;\r\n    return (\r\n      <div >\r\n        <Modal\r\n          isOpen={props.showModal}\r\n          contentLabel=\"Image Modal\"\r\n          style={{\r\n            content: {\r\n              top: '50%',\r\n              left: '50%',\r\n              right: 'auto',\r\n              bottom: 'auto',\r\n              marginRight: '-50%',\r\n              transform: 'translate(-50%, -50%)'\r\n            }\r\n          }}\r\n        >\r\n          <img src={backgroundImage} alt={\"flickr\" }onClick={() => closeModal()} />\r\n        </Modal>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default ImageModal;\r\n\r\n","import ImageModal from '../ImageModal/imageModal'\r\nimport './Image.scss';\r\n\r\nimport React, { useState, useRef } from 'react';\r\nimport { useDrag, useDrop } from 'react-dnd'\r\nimport FontAwesome from 'react-fontawesome';\r\n\r\nconst type = 'Image'\r\n\r\nconst Image = (props) => {\r\n\r\n  const ref = useRef(null);\r\n  \r\n  const [rotation, setRotation] = useState(0)\r\n  const [showModal, setShowModal] = useState(false)\r\n  const { dto, galleryWidth, deleteImage, index, moveImage } = props;\r\n  \r\n  const [, drop] = useDrop({\r\n    accept: type,\r\n    hover(item) {\r\n      if (!ref.current) {\r\n        return;\r\n      }\r\n      const dragIndex = item.index;\r\n      const hoverIndex = index;\r\n      if (dragIndex === hoverIndex) {\r\n        return;\r\n      }\r\n      moveImage(dragIndex, hoverIndex);\r\n\r\n      item.index = hoverIndex;\r\n    }\r\n  })\r\n\r\n  const [{ isDragging }, drag] = useDrag({\r\n    item: { type, id: dto.id, index },\r\n    collect: monitor => ({\r\n      isDragging: monitor.isDragging()\r\n    })\r\n  });\r\n\r\n  drag(drop(ref));\r\n\r\n  const urlFromDto = (dto) => {\r\n    return `https://farm${dto.farm}.staticflickr.com/${dto.server}/${dto.id}_${dto.secret}.jpg`;\r\n  }\r\n\r\n  const urlModalImage = (dto) => {\r\n    return `https://farm${dto.farm}.staticflickr.com/${dto.server}/${dto.id}_${dto.secret}_b.jpg`;\r\n  }\r\n\r\n  const onRotateImage = (event) => {\r\n    event.preventDefault();\r\n    setRotation(rotation + 90 )\r\n  }\r\n\r\n  const onEnlargeImage = () => {\r\n    setShowModal(!showModal)\r\n  }\r\n\r\n  const imagesPerRow = Math.round(galleryWidth / 200);\r\n  const size = Math.round(galleryWidth / imagesPerRow) -1;\r\n\r\n  return (\r\n      <div\r\n      className=\"image-root\"\r\n      ref={ref}\r\n      style={{\r\n          backgroundImage: `url(${urlFromDto(dto)})`,\r\n          width: size + 'px',\r\n          height: size + 'px',\r\n          transform: `rotate(${rotation}deg)`,\r\n          opacity: isDragging ? 0: 1\r\n        }}\r\n        >\r\n        <div>\r\n          <FontAwesome className=\"image-icon\" name=\"sync-alt\" title=\"rotate\" onClick={(event) => onRotateImage(event)} />\r\n          <FontAwesome className=\"image-icon\" name=\"trash-alt\" title=\"delete\" onClick={(event) => deleteImage(event, dto)}/>\r\n          <FontAwesome className=\"image-icon\" name=\"expand\" title=\"expand\" onClick={(event) => onEnlargeImage(event)} />\r\n          <ImageModal\r\n            showModal={showModal}\r\n            closeModal={onEnlargeImage}\r\n            backgroundImage={ urlModalImage(dto) }\r\n          ></ImageModal>\r\n        </div>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default Image;\r\n","import Image from './Image';\r\n\r\nexport default Image;\r\n","import Gallery from './Gallery';\r\n\r\nexport default Gallery;\r\n","import Image from '../Image';\r\nimport './Gallery.scss';\r\n\r\nimport axios from 'axios';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport debounce from 'lodash.debounce';\r\nimport update from 'immutability-helper';\r\n\r\nconst Gallery = (props) => {\r\n  const [images, setImages] = useState([]);\r\n  const [galleryWidth, setGalleryWidth] = useState(1000);\r\n  const [apiCallCounter, setApiCallCounter] = useState(0);\r\n  const [maxPages, setMaxPages] = useState(0);\r\n\r\n  const getImages = (tag) => {\r\n    const pageNumber = apiCallCounter + 1;\r\n    const getImagesUrl = `services/rest/?method=flickr.photos.search&api_key=522c1f9009ca3609bcbaf08545f067ad&tags=${tag}&tag_mode=any&per_page=100&page=${pageNumber}&format=json&nojsoncallback=1`;\r\n    const baseUrl = 'https://api.flickr.com/';\r\n    axios({\r\n      url: getImagesUrl,\r\n      baseURL: baseUrl,\r\n      method: 'GET'\r\n    })\r\n      .then(res => res.data)\r\n      .then(res => {\r\n        setApiCallCounter(apiCallCounter + 1)\r\n        if (\r\n          res &&\r\n          res.photos &&\r\n          res.photos.photo &&\r\n          res.photos.photo.length > 0\r\n        ) {\r\n          setImages([...images, ...res.photos.photo]);\r\n          setMaxPages(res.photos.pages)\r\n        }\r\n      });\r\n  }\r\n\r\n  useEffect(() => { //Component did mount hooks equivalent\r\n    getImages(props.tag);\r\n    setGalleryWidth(document.body.clientWidth);\r\n    window.addEventListener('resize', updateDimensions);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  const isFirstRun = useRef(true);\r\n  const debouncedSave = useRef(\r\n    debounce(nextValue => getImages(nextValue), 1500)).current;\r\n\r\n  useEffect(() => { // Component did update hooks equivalent\r\n    if (isFirstRun.current) {\r\n        isFirstRun.current = false;\r\n        return;\r\n    }\r\n    setImages([]);\r\n    debouncedSave(props.tag);\r\n\r\n    window.addEventListener('resize', updateDimensions);\r\n    return function cleanup() {\r\n      window.removeEventListener('resize', updateDimensions);\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [props])\r\n\r\n  const onDeleteImage = (event, imageDetails) => {\r\n    event.preventDefault();\r\n    setImages(\r\n      images.filter((image) => {\r\n        return image !== imageDetails\r\n    }));\r\n  }\r\n\r\n  const updateDimensions = () => {\r\n    setGalleryWidth(document.body.clientWidth );\r\n  };\r\n\r\n  const moveImage = (dragIndex, hoverIndex) => {\r\n    const draggedImage = images[dragIndex];\r\n    setImages(\r\n      update(images, {\r\n        $splice: [[dragIndex, 1], [hoverIndex, 0, draggedImage]]\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"gallery-root\">\r\n      <InfiniteScroll\r\n        dataLength={images.length}\r\n        hasMore={apiCallCounter >= 1 && maxPages >= apiCallCounter} // this is to prevent firing of the infinite scroll for the first call\r\n        next={() => getImages(props.tag)}\r\n        loader={<h4>Loading...</h4>}\r\n        scrollThreshold={'100px'}\r\n        endMessage={\r\n          <p style={{ textAlign: 'center' }}>\r\n            <b>End of image list</b>\r\n          </p>\r\n        }\r\n      >\r\n        {images.map((dto, index) => (\r\n          <Image key={index} dto={dto} index={index} galleryWidth={galleryWidth} deleteImage={onDeleteImage} moveImage={moveImage} />\r\n        ))}\r\n      </InfiniteScroll>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Gallery;\r\n","import React, { useState } from 'react';\r\nimport { DndProvider } from 'react-dnd'\r\nimport { HTML5Backend } from 'react-dnd-html5-backend'\r\n  \r\nimport './App.scss';\r\nimport Gallery from '../Gallery';\r\n\r\nconst App = () => {\r\n\r\n  const [tag, setTag] = useState('Wiesn');\r\n\r\n    return (\r\n      <div className=\"app-root\">\r\n        <div className=\"app-header\">\r\n          <h2>Flickr Gallery</h2>\r\n          <input className=\"app-input\" onChange={(event) => setTag(event.target.value)} value={tag}/>\r\n        </div>\r\n        <DndProvider backend={HTML5Backend}>\r\n          <Gallery tag={tag} />\r\n          </DndProvider>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('app')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}